<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:MediaManager="clr-namespace:MediaManager"
    xmlns:Controls="clr-namespace:MediaManager.Controls"
    xmlns:Converters="clr-namespace:Converters"
    
	mc:Ignorable="d"
	x:Class="MediaManager.FilmDetails"
	x:Name="UserControl_FilmDetails"
	d:DesignWidth="640" d:DesignHeight="480" FontFamily="./Fonts/#Aeon Info" Loaded="UserControl_FilmDetails_Loaded">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="TextBoxStyleEdit" TargetType="{x:Type TextBox}">
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocusedOn">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="FocusedOff">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border BorderThickness="1">
                                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource NuclearScrollViewer}" />
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HoverBorder" IsHitTestVisible="False" Opacity="0" BorderBrush="{StaticResource GlyphBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" />
                            <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="{StaticResource HoverShineBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,2,2" />


                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>

                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsFocused" Value="False" />
                                </MultiTrigger.Conditions>

                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="#FF000000"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="FocusManager.GotFocus"/>
                <Trigger Property="Border.BorderThickness" Value="0,0,0,0"/>
            </Style.Triggers>
        </Style>

        <VisualBrush x:Key="Reflet_Poster">
            <VisualBrush.Visual>
                <Image Source="Images/list_movieicon_glass.png"/>
            </VisualBrush.Visual>
        </VisualBrush>
        <Converters:UriToImageConverter x:Key="UriToImageConverter"/>
        <Converters:TableauToString x:Key="TableauToString"/>
        <Converters:PersonneToString x:Key="PersonneToString"/>
        <Converters:StringToImageSource x:Key="StringToImageSource"/>
        <Converters:DateTimeConverter x:Key="DateTimeConverter"/>

        <ItemsPanelTemplate x:Key="ItemsPanelTemplate_Acteurs">
            <WrapPanel/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="DataTemplate_Acteurs">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock Text="{Binding Path=Nom}" x:Name="Nom" Margin="2,0,0,0"/>
                <TextBlock FontStyle="Italic" Foreground="{DynamicResource DisabledForegroundBrush}"><Run Text=" est "/></TextBlock>
                <TextBlock Text="{Binding Path=Role}" x:Name="Role" FontStyle="Italic" Margin="0,0,2,0" Foreground="{DynamicResource DisabledForegroundBrush}"/>
            </StackPanel>
        </DataTemplate>
        <VisualBrush x:Key="maskposter">
            <VisualBrush.Visual>
                <Border BorderThickness="0,0,0,0" CornerRadius="10,10,10,10" BorderBrush="#FFFFFFFF" Background="#FFFFFFFF" Width="{Binding Path=ActualWidth, ElementName=ImagePoster, Mode=Default}" Height="{Binding Path=ActualHeight, ElementName=ImagePoster, Mode=Default}"/>
            </VisualBrush.Visual>
        </VisualBrush>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border SnapsToDevicePixels="true" BorderThickness="1,1,1,1" CornerRadius="3">
                            <DockPanel x:Name="dockPanel">
                                <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{DynamicResource ToggleButtonStyle1}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" />
                                <Border Visibility="Collapsed" BorderThickness="1,0,1,1" CornerRadius="3,3,3,3" x:Name="border" Margin="1,1,1,1">
                                    <ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                                </Border>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="border" Value="Visible" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Down" />
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="PressedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Padding="{TemplateBinding Padding}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                            <Grid SnapsToDevicePixels="False" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Margin="2,2,2,2" x:Name="Rectangle" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                                <Rectangle Margin="2,2,2,2" x:Name="ShineRectangle" Fill="{DynamicResource ShineBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                                <Rectangle Margin="2,2,2,2" x:Name="HoverRectangle" Fill="{DynamicResource HoverBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
                                <Rectangle Margin="2,2,2,2" x:Name="HoverShineRectangle" Fill="{DynamicResource HoverShineBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
                                <Rectangle Margin="2,2,2,2" x:Name="PressedRectangle" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" />
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                                <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                                <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <ScrollViewer OverridesDefaultStyle="True" Width="Auto" Height="Auto" Background="{x:Null}" BorderBrush="{x:Null}" VerticalScrollBarVisibility="Auto">
        <Grid Width="Auto" Height="Auto" OverridesDefaultStyle="True" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <DockPanel LastChildFill="True">
                <StackPanel Width="Auto" Height="Auto" Margin="0,0,5,0">
                    <Grid Width="253" Height="325" Margin="0,0,0,5">
                        <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="{DynamicResource NormalBorderBrush}" >
                            <Controls:Sablier Visibility="{Binding Path=Cover.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default, FallbackValue=Hidden}"/>
                            <Border.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Image x:Name="Affiche" Source="{Binding Path=Cover.Miniature}" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                        <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="{DynamicResource NormalBorderBrush}" >
                            <Border.ToolTip>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Largeur : "/>
                                        <TextBlock Text="{Binding Path=Cover.Largeur}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Hauteur : "/>
                                        <TextBlock Text="{Binding Path=Cover.Hauteur}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border.ToolTip>
                            <Border.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Image Stretch="Fill" Source="Images\list_movieicon_glass.png"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                    <Grid Width="253" Height="143" Margin="0,0,0,5">
                        <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="{DynamicResource NormalBorderBrush}" >
                            <Controls:Sablier Visibility="{Binding Path=Fanart.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, Mode=Default, FallbackValue=Hidden}"/>
                            <Border.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Image x:Name="Fanart" Source="{Binding Path=Fanart.Miniature}" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="border" BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="{DynamicResource NormalBorderBrush}" >
							<Border.ToolTip>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Largeur : "/>
                                        <TextBlock Text="{Binding Path=Fanart.Largeur}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Hauteur : "/>
                                        <TextBlock Text="{Binding Path=Fanart.Hauteur}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border.ToolTip>
                            <Border.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Image Stretch="Fill" Source="Images\list_movieicon_glass.png"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </StackPanel>
                <DockPanel Margin="5,0,5,5" Width="Auto" Height="Auto" LastChildFill="True" ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <TextBox Text="{Binding Path=Titre}" Height="Auto" TextWrapping="Wrap" Width="Auto" Foreground="{DynamicResource TextBrush}" FontSize="16" FontWeight="Bold" x:Name="Titre" DockPanel.Dock="Top" VerticalAlignment="Top" Margin="0,0,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                    <TextBox Text="{Binding Path=TitreOriginal}" Height="Auto" Width="Auto" Foreground="{DynamicResource TextBrush}" FontSize="12" FontWeight="Bold" x:Name="Titre_Original" DockPanel.Dock="Top" FontStyle="Italic" Style="{DynamicResource TextBoxStyleEdit}" />
                    <DockPanel Width="Auto" Height="Auto" DockPanel.Dock="Top" LastChildFill="True">
                        <StackPanel Width="Auto" Height="Auto" DockPanel.Dock="Left">
                            <DockPanel Width="Auto" Height="Auto" LastChildFill="True">
                                <Label Width="90" Content="Réalisateurs :" Foreground="#FF000000" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                <Expander Header="{Binding Path=Realisateurs, Converter={StaticResource PersonneToString}, Mode=Default, FallbackValue=' '}" BorderThickness="0,0,0,0" Style="{DynamicResource ExpanderStyle1}" Margin="10,0,0,0" MinHeight="0">
                                    <Grid>
                                        <ListBox ItemsSource="{Binding Path=Realisateurs}" IsSynchronizedWithCurrentItem="True" ItemTemplate="{DynamicResource DataTemplate_Acteurs}"/>
                                    </Grid>
                                </Expander>
                            </DockPanel>
                            <DockPanel Width="Auto" Height="Auto">
                                <Label Width="90" Content="ACTEURS :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                <Expander Header="{Binding Path=Acteurs, Converter={StaticResource PersonneToString}, Mode=Default, FallbackValue=' '}" BorderThickness="0,0,0,0" Style="{DynamicResource ExpanderStyle1}" Margin="10,0,0,0" MinHeight="20" IsExpanded="False">
                                    <Grid>
                                        <Button Width="18" Height="18" HorizontalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <Image Width="16" Height="16" Source="Images\Scan_16.png" Stretch="UniformToFill"/>
                                        </Button>
                                        <ListBox ItemsSource="{Binding Path=Acteurs}" IsSynchronizedWithCurrentItem="True" ItemTemplate="{DynamicResource DataTemplate_Acteurs}" />
                                    </Grid>
                                </Expander>
                            </DockPanel>
                            <DockPanel Width="Auto" Height="Auto">
                                <Label Width="90" Content="GENRES :" Foreground="#FF000000" Background="{x:Null}" HorizontalAlignment="Left" Height="Auto" Margin="0,2,0,2" VerticalAlignment="Center"/>
                                <Expander Header="{Binding Path=Genres, Converter={StaticResource TableauToString}, Mode=Default, FallbackValue=' '}" Style="{DynamicResource ExpanderStyle1}" Margin="10,0,0,0">
                                    <Grid>
                                        <ListBox ItemsSource="{Binding Path=Genres}" IsSynchronizedWithCurrentItem="True"/>
                                    </Grid>
                                </Expander>
                            </DockPanel>
                            <DockPanel Width="Auto" Height="Auto">
                                <Label Width="90" Content="ANNEE :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                <TextBox Width="Auto" Text="{Binding Path=Annee}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Annee" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                <Label Width="Auto" Content="DATE DE SORTIE :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="10,2,0,2"/>
                                <TextBox Width="Auto" Text="{Binding Path=DateSortie, Converter={StaticResource DateTimeConverter}, Mode=Default}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_DateSortie" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                <Label Width="Auto" Content="DUREE :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="10,2,0,2"/>
                                <TextBox Width="Auto" Text="{Binding Path=DureeChaine}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Duree" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                            </DockPanel>
                            <DockPanel Width="Auto" Height="Auto">
                                <Label Width="90" Content="MPAA :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                <TextBox Width="Auto" Text="{Binding Path=Avis}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Mpaa" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                            </DockPanel>
                            <DockPanel Width="Auto" Height="Auto">
                                <Label Width="90" Content="LECTURES :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                <TextBox Width="Auto" Text="" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Playcount" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                <Label Width="Auto" Content="RATING :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="10,2,0,2"/>
                                <TextBox Width="Auto" Text="{Binding Path=NotePresse}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Rating" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                <Label Width="Auto" Content="VOTES :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="10,2,0,0"/>
                                <Label Width="Auto" Content="" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Votes" Margin="10,2,0,2"/>
                            </DockPanel>
                        </StackPanel>
                    </DockPanel>
                    <Border Width="Auto" Height="Auto" DockPanel.Dock="Top" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,1,0,0" Padding="5,5,5,5">
                        <TextBox Width="Auto" Height="Auto" x:Name="txt_Outline" TextAlignment="Justify" TextWrapping="Wrap" Foreground="{DynamicResource TextBrush}" Style="{DynamicResource TextBoxStyleEdit}"/>
                    </Border>
                    <Border Width="Auto" Height="Auto" DockPanel.Dock="Top" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,1,0,0" Padding="5,5,5,5">
                        <TextBox Text="{Binding Path=Critique}"  Width="Auto" Height="Auto" TextWrapping="Wrap" x:Name="txt_Plot" TextAlignment="Justify" Foreground="{DynamicResource TextBrush}" Style="{DynamicResource TextBoxStyleEdit}" AcceptsReturn="True"/>
                    </Border>
                    <Border x:Name="bdDivers" Width="Auto" Height="Auto" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,1,0,0" Padding="5,5,5,5" DockPanel.Dock="Bottom">
                        <Expander Header="Divers" Style="{DynamicResource ExpanderStyle1}" >
                            <StackPanel>
                                <DockPanel Width="Auto" Height="Auto">
                                    <Label Width="90" Content="ID Allociné :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                    <TextBox Width="Auto" Text="{Binding Path=AlloID}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_AlloId" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                </DockPanel>
                                <DockPanel Width="Auto" Height="Auto">
                                    <Label Width="90" Content="ID IMDB :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                    <TextBox Width="Auto" Text="{Binding Path=ID}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_ImdbId" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                </DockPanel>
								<DockPanel Width="Auto" Height="Auto">
                                    <Label Width="90" Content="Studio :" Foreground="#FF000000" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Center" Margin="0,2,0,2"/>
                                    <TextBox Width="Auto" Text="{Binding Path=Studio}" Foreground="{DynamicResource TextBrush}" Height="Auto" x:Name="lib_Studio" Margin="10,2,0,2" Style="{DynamicResource TextBoxStyleEdit}"/>
                                </DockPanel>
                            </StackPanel>
                        </Expander>
                    </Border>
                    <Border Width="Auto" Height="Auto" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="0,1,0,0" Padding="5,5,5,5" DockPanel.Dock="Top">
                        <TextBox Text="{Binding Path=Synopsis}" Width="Auto" Height="Auto" TextWrapping="Wrap" x:Name="txt_Tagline" TextAlignment="Justify" Foreground="{DynamicResource TextBrush}" Style="{DynamicResource TextBoxStyleEdit}" AcceptsReturn="True"/>
                    </Border>
                </DockPanel>
            </DockPanel>
        </Grid>
    </ScrollViewer>
</UserControl>